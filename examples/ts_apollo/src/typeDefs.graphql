scalar ISO8601DateTime

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
  reactions: [Reaction!]!
}

type Post {
  id: ID!
  authorId: ID!
  author: User!
  parent: Post
  text: String!
  reactions: [Reaction!]!
  createdAt: ISO8601DateTime!
}

enum Emotion {
  LIKE
  DISLIKE
  LOVE
  LAUGH
  CRY
  WOW
}

type Reaction {
  id: ID!
  emotion: Emotion!
  createdAt: ISO8601DateTime!
  post: Post!
  user: User!
}

type Query {
  me: User
  post(id: ID!): Post!
  posts: [Post!]!
  user(id: ID, email: String): User!
  users: [User!]!
}

type Mutation {
  logIn(input: LogInInput!): LogInResult!
}

input LogInInput {
  email: String!
  password: String!
}

type LogInResult {
  token: String!
  user: User!
}